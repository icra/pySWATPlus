name: Publish to PyPI and GitHub Release

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build package
        run: |
          python setup.py sdist bdist_wheel

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload dist/*

      - name: Get latest tag
        id: get_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

      - name: Bump version
        run: |
          new_version=$(echo $LATEST_TAG | awk -F. -v OFS=. '{$NF += 1 ; print}')
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV

      - name: Create new tag and push
        run: |
          git tag $NEW_VERSION
          git push origin $NEW_VERSION

      - name: Create GitHub release
        run: |
          gh release create $NEW_VERSION --title "Release $NEW_VERSION" --notes "Automated release with updated package."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy-docs:
    runs-on: ubuntu-latest
    needs: build-and-publish  # Ensure this runs after the build-and-publish job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install MkDocs and dependencies
        run: |
          pip install mkdocs mkdocs-material

      - name: Build MkDocs documentation
        run: |
          mkdocs build --site-dir public

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public